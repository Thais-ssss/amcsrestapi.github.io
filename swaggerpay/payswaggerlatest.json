{
  "openapi": "3.0.1",
  "info": {
    "title": "AMCS Pay External API",
    "version": "external",
    "description": "# Getting Started\n\n## Document Purpose and Scope\n\nThe AMCS Pay REST API endpoints are technically described in this document. This document's goal is to instruct readers on how to interface with the AMCS Pay REST API.\n\n## About AMCS Pay\n\nAMCS Pay offers waste & recycling operators feature-rich payment services that broaden their ability to compete in a rapidly evolving marketplace. The services include card payments, ACH payments, Google Pay, Apple Pay, and many alternative payment methods. AMCS Pay supports multiple recognized industry partners such as Global Payments, ACI Worldwide etc.\n\n## Communicating to AMCS Pay API\n\nA calling application must first sign up as a Tenant. A private key is created after successful registration and will be used as the Personal Access Token (PAT).\n\nThe Tenant Private Key is then supplied during authentication and authorization through the (\"/authTokens\") endpoint. This creates a cookie, which needs to be tracked in a cookie container. Subsequent calls to the REST API will then use this cookie to authenticate and authorize requests.\n\n<img src=\"diagram/amcspay_multitenant.png\" width=\"689\" height=\"265\">"
  },
  "security": [
    {
      "cookieAuth": []
    }
  ],
  "servers": [
    {
      "url": "https://eu1-pay-dev.amcsplatform.com/",
      "description": "AMCSPay Developer Environment"
    }
  ],
  "paths": {
    "/authTokens": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Auth by Private Key",
        "description": "This endpoint is used for authentication and authorisation of a calling application by supplying the Tenant Private Key in the privateKey property. When successful, Platform.PAY.SessionToken is added to the cookie. \n\n## Request\n\n| **Property** | **Description** |\n| --- | --- |\n| PrivateKey | This is a Personal Access Token (PAT), generated during Tenant Registration. |\n\n## Response\nAdditional fields from the response, other from the one below, can be disregarded.\n\n| **Property** | **Description** |\n| --- | --- |\n| AuthResult | The authentication and authorization result. Returns \"ok\" if successful otherwise returns \"invalidCredentials\".",
        "security": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AMCSPayUserCredentials"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok",
            "headers": {
              "Set-Cookie": {
                "schema": {
                  "type": "string",
                  "example": "Platform.PAY.SessionToken=abcde12345; Path=/; HttpOnly",
                  "description": "Subsequent calls to the REST API will use this cookie to authenticate and authorize requests."
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AMCSPayLoginResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ExternalTransaction/OneOff": {
      "post": {
        "tags": [
          "ExternalTransaction"
        ],
        "summary": "OneOff Payment",
        "description": "This endpoint is used to initiate the payment through the hosted payments page.\n\n## Request\n\n| Property                  | Description  |\r\n| ------------------------- | ------------------------------------------------------------------------|\r\n| RequestType                      |Request Type can be any of \"OneOffPayment\", \"Tokenization\".                            |\r\n| PaymentType               | Payment Type can be any of \"Card\", \"ACH \", \"GooglePay\", \"ApplePay\" .                      |\r\n| TransactionOrigin                 | Transaction Origin can be any of \"Moto\", \"Ecom\"        |\r\n| CallerIdentifier               | The Caller Identification associated to the Payment request.             |\r\n| RequestId               | The Caller supplied GUID associated to the Payment request.        |\r\n| ProviderType                   |Provide Type can be any of \"ACICards\", \"ACIElectronic\", \"Heartland\", \"MerchantPartners\",  \"Payment Express\", \"Realex\"        |\r\n| TransactionAmount                     |The amount associated to the payment request.        |\r\n| TransactionAmount.PrincipalAmount                     |The base amount associated to the payment request.        |\r\n| TransactionAmount.ServiceFeeAmount                     |The service fee amount associated to the payment request.        |\r\n| TransactionAmount.Currency                     |The currency associated to the payment request.        |\r\n| CanStoreProfile                         | The flag suggests store the profile to vault.        |\r\n| CompletionURL                         | The Completion URL Request associated to the customer mandate for webhooks.        |\r\n| Addresses                         | The List of addresses associated to the customer mandate for 3ds transaction.        |\r\n| Addresses[0].AddressType                         | The AddressType associated to the address can be any of \"Billing\", \"Shipping\".        |\r\n| Addresses[0].StreetAddress1                         | The StreetAddress Line1 associated to the address.        |\r\n| Addresses[0].StreetAddress2                         | The StreetAddress Line2 associated to the address.        |\r\n| Addresses[0].StreetAddress3                         | The StreetAddress Line3 associated to the address.        |\r\n| Addresses[0].City                         | The City associated to the address.        |\r\n| Addresses[0].State                         | The State associated to the address.        |\r\n| Addresses[0].PostCode                         | The PostCode associated to the address.        |\r\n| Addresses[0].Country                         | The Country associated to the address.        |\r\n| Addresses[0].ISO3166Numeric                         | The ISO3166Numeric associated to the address.        |\r\n| Contacts                         | The Contacts associated to the customer mandate for 3ds transaction.        |\r\n| Contacts[0].ContactType                         | The Contact Type associated to the contact can be any of type \"Email\", \"Mobile\".        |\r\n| Contacts[0].ContactValue                         | The Contact Value associated to the contact type.        |\r\n| CustomerInfo                         | The Details associated to the customer mandate for 3ds transaction.        |\r\n| CustomerInfo.CustomerName                         | The Customer Name associated to the customer.        |\r\n| CustomerInfo.CustomerId                         | The Customer Id associated to the customer.        |\r\n| CustomerInfo.CustomerIP                         | The Customer Ip associated to the customer.        |\r\n| CustomerInfo.CustomerStatus                         | The Customer Status associated to the customer.        |\r\n| CustomerInfo.WebsiteUrl                         | The Website Url associated to the customer.\n\n## Response\n\n| Property                  | Description  |\r\n| ------------------------- | ------------------------------------------------------------------------|\r\n| HppUrl                      | The Hosted Payment Page Url to load in a frame/browser.        |\r\n| CallerTransactionId               |  The AMCS generated Request GUID associated to the Payment request.                              |\r\n| StatusCode                 | The StatusCode associated to the Payment request.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AMCSPayInitiatePaymentRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AMCSPayInitiatePaymentResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AMCSPayErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AMCSPayErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AMCSPayErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AMCSPayErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ExternalTransaction/Poll": {
      "post": {
        "tags": [
          "ExternalTransaction"
        ],
        "summary": "Poll Payment",
        "description": "This endpoint is used to poll the payment initiated after interaction through a hosted payments page.\n\n## Request\n\n| **Property** | **Description** |\n| --- | --- |\n| CallerTransactionId | The AMCS generated Request GUID associated to the hosted payments page. |\n\n## Response\n\n| **Property** | **Description** |\n| --- | --- |\n| AMCSPayReferenceId | The AMCS generated Response GUID associated to the Payment request. |\n| ProviderReference | The reference number associated to the payment provider. |\n| ProviderResponseCode | The response code associated to the payment provider. |\n| Notes | More information associated to the payment. |\n| ProviderAuthCode | The authorization code associated to the payment provider. |\n| AdditionalProviderData | More information associated to the payment provider. |\n| ResponseTimeStamp | The Timestamp of the payment response payload. |\n| StatusCode | The status associated to the payment can be any of type \"Initiated\", \"Success\", \"Failure\", \"Timeout\", \"Cancelled\".",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AMCSPayPollPaymentRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AMCSPayPollPaymentResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AMCSPayErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AMCSPayErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AMCSPayErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AMCSPayErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ExternalTransaction/Refund": {
      "post": {
        "tags": [
          "ExternalTransaction"
        ],
        "summary": "Refund Payment",
        "description": "This endpoint is used to make a refund.\n\n## Request\n\n| **Property** | **Description** |\n| --- | --- |\n| RequestType | Request Type is  \"Refund\". |\n| PaymentType | Payment Type can be any of \"Card\", \"ACH \".| \n| TransactionOrigin | For Refund, transaction origin can only be \"Moto\". |\n| CallerIdentifier | The identification associated to the calling application.| \n| RequestId | The Caller supplied GUID associated to the Payment request.|\n| CallerIPAddress | The IP Address associated to the the customer's location.|\n| ProviderType | Provide Type can be any of \"ACICards\", \"ACIElectronic\", \"Heartland\", \"MerchantPartners\", \"Payment Express\", \"Realex\".| \n| TransactionAmount | The amount subjected for refund.|\n| OriginalPaymentReference | The reference ID sent by the provider associated to the original payment being refunded.|\n\n## Response\n\n| **Property** | **Description** |\n| --- | --- |\n| AMCSPayReferenceId | The AMCS generated Response GUID associated to the Payment request. |\n| ProviderReference | The reference number associated to the payment provider response. |\n| ProviderResponseCode | The status code associated to the payment provider response. |\n| ProviderAuthCode | The authorization code associated to the payment provider. |\n| AdditionalProviderData | More information associated to the payment provider. As of the moment, this will be required only for Tokenization only. |\n| ResponseTimeStamp | The time stamp associated to the response payload. |\n| Notes | More information associated to the payment. |\n| StatusCode | The status associated to the refund response can be any of type \"Initiated\" or \"Failure\".",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AMCSPayRefundRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AMCSPayRefundResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AMCSPayErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AMCSPayErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AMCSPayErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AMCSPayErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ExternalTransaction/Vault": {
      "post": {
        "tags": [
          "ExternalTransaction"
        ],
        "summary": "Vault Payment",
        "description": "This endpoint is used to make a vault payment.\n\n## Request\n\n| **Property** | **Description** |\n| --- | --- |\n| RequestType | Request Type is  \"VaultOrAutoPayment\". |\n| PaymentType | Payment Type can be any of \"Card\", \"ACH \".| \n| TransactionOrigin | Transaction Origin can be any of \"Moto\", \"Ecom\". |\n| CallerIdentifier | The identification associated to the calling application.| \n| RequestId | The Caller supplied GUID associated to the Payment request.|\n| ProviderType | Provide Type can be any of \"ACICards\", \"ACIElectronic\", \"Heartland\", \"MerchantPartners\", \"Payment Express\", \"Realex\".| \n| TransactionAmount | The amount subjected for vault.|\n| TokenReference | The Token Reference sent by the provider associated to the original payment.|\n| SchemeReferenceData | The scheme reference data sent by the provider associated to the original payment.|\n| MaskedCardNumber | The Card Number masked sent by the provider associated to the original payment.|\n\n## Response\n\n| **Property** | **Description** |\n| --- | --- |\n| AMCSPayReferenceId | The AMCS generated Response GUID associated to the Payment request. |\n| ProviderReference | The reference number associated to the payment provider response. |\n| ProviderResponseCode | The status code associated to the payment response. |\n| ProviderAuthCode | The authorization code associated to the payment provider. |\n| AdditionalProviderData | More information associated to the payment provider. As of the moment, this will be required only for Tokenization only. |\n| ResponseTimeStamp | The time stamp associated to the response payload. |\n| Notes | More information associated to the payment. |\n| StatusCode | The status associated to the refund response can be any of type \"Initiated\" or \"Failure\".",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AMCSPayVaultRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AMCSPayVaultResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AMCSPayErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AMCSPayErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AMCSPayErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AMCSPayErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ExternalTransaction/Terminal": {
      "post": {
        "tags": [
          "ExternalTransaction"
        ],
        "summary": "Terminal Payment",
        "description": "This endpoint is used to make a terminal payment.\n\n## Request\n\n| Property                  | Description  |\r\n| ------------------------- | ------------------------------------------------------------------------|\r\n| CallerIdentifier               | The Caller Identification associated to the Payment request.             |\r\n| RequestId               | The Caller supplied Request GUID associated to the Payment request.        |\r\n| TerminalId               | The Terminal Id associated to the payment request.        |\r\n| TransactionAmount                     |The Amount associated to the payment request.        |\r\n| TransactionAmount.PrincipalAmount                     |The Principal Amount associated to the payment request.        |\r\n| TransactionAmount.ServiceFeeAmount                     |The service fee amount associated to the payment request.        |\r\n| TransactionAmount.Currency                     |The Currency associated to the payment request.        |\r\n| CardEntryMode                         | The Card Entry Mode can be any of \"Manual\", \"Swipe\", \"Tap\". |\n\n## Response\n\n| **Property** | **Description** |\n| --- | --- |\n| StatusCode               | The status associated to the payment can be any of type \"Success\", \"Failure\". |\n| AmcsPayTransactionId | The Transaction Guid associated to AMCSPay. |\n| ProviderTransactionId               | The Transaction Id associated to the payment provider. |\n| ApprovalCode               | The Approval code associated to the payment provider. |\n| TokenValue               | The Token value associated to the card. |\n| TokenExpiry | The Expiry Date and Time associated to the token value. |\n| ResponseTimeStamp               | The Timestamp of the payment response payload.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AMCSPayTerminalRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AMCSPayTerminalResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AMCSPayErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AMCSPayErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AMCSPayErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/Mobills/Ivr/Pay/GetCustomerInvoiceDetails": {
      "post": {
        "tags": [
          "Mobills IVR"
        ],
        "summary": "Get Customer Invoice Details",
        "description": "This endpoint creates a record in payment transaction table.\n\n## Request\n\n| Property                  | Description  |\r\n| ------------------------- | ------------------------------------------------------------------------|\r\n| CustomerARCode                      | The account code used for Accounts Receivable.        (AMCS will provide the account ARCode)                             |\r\n| Channel               | Channel can be only MOBILL OR IVR                         | \n\n ## Response\n\n| Property                  | Description  |\r\n| ------------------------- | ------------------------------------------------------------------------|\r\n| CustomerGuid                 | The GUID associated to the customer.        |\r\n| CustomerName               |The customer's name.        |\r\n| CustomerBalance               |The amount associated to the payment.        |\r\n| CustomerCurrency               | Customer Currency associated with the Customer account.        |\r\n| InvoiceDetails               |It will show all the invoices associated with the account               |\r\n| InvoiceNumber                   |The invoice number associated to the invoice. Filterable.        |\r\n| InvoiceGUID                     |The GUID associated to the invoice.        |\r\n| InvoiceDate                     |The invoiceDate associated to the invoice in ISO format (YYYY-MM-DD).        |\r\n| ZipCode                         |Zip code is associated with the account               |\r\n| InvoiceDueDate                  |The dueDate associated to the invoice in ISO format (YYYY-MM-DD).        |\r\n| UnallocatedAmount               |The Unallocated Amount on the customers account.        |\r\n| InvoiceCurrency                 |Invoice Currency asscoaited with the customer account             |\r\n| TransactionReference            |Transaction Reference associated with account                 |\r\n| ZipCode                         |ZipCode associated with the account address                                |\r\n| InvoiceDate                     |The invoiceDate associated to the invoice in ISO format (YYYY-MM-DD).        |\r\n| LastPaymentDate                 |When the last payment was made                     |\r\n| MakePaymentLink                 |It shows the payment link (if any invoice available)                     |\r\n| IsActive                 |Whether the customer is active              |\r\n| MobillsEnrollment               |Whether the mobills enrollment is active.              |\r\n| GUID         |Guid associated with the account",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AMCSPayMobillsIvrRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AMCSPayMobillsIvrResponse"
                }
              }
            }
          },
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AMCSPayMobillsIvrResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AMCSPayErrorResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "cookieAuth": {
        "type": "apiKey",
        "in": "cookie",
        "name": "Platform.PAY.SessionToken"
      }
    },
    "schemas": {
      "AMCSPayUserCredentials": {
        "type": "object",
        "required": [
          "privateKey"
        ],
        "properties": {
          "privateKey": {
            "type": "string",
            "nullable": true,
            "example": "1zEFtwJQE0cmKUE3AvnzBbm5"
          }
        },
        "additionalProperties": false
      },
      "AMCSPayLoginResponse": {
        "type": "object",
        "properties": {
          "authResult": {
            "type": "string",
            "nullable": true,
            "example": "ok"
          },
          "userName": {
            "type": "string",
            "nullable": true,
            "example": "ADMIN01"
          },
          "userIdentity": {
            "type": "string",
            "nullable": true,
            "example": "ADMIN"
          },
          "sysUserId": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "example": 3
          },
          "userGuid": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "example": "607e37cd-4f51-4148-af23-4459b74fc3b2"
          },
          "companyOutletId": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "example": 10
          },
          "companyOutletGuid": {
            "type": "string",
            "format": "uuid",
            "nullable": true,
            "example": "5feaaae5-7733-4e45-ac39-87d46cf138e0"
          },
          "stayLoggedIn": {
            "type": "boolean",
            "example": false
          }
        }
      },
      "AMCSPayMobillsIvrRequest": {
        "type": "object",
        "required": [
          "customerARCode",
          "channel"
        ],
        "properties": {
          "customerARCode": {
            "type": "string",
            "example": "ACC1007",
            "nullable": false
          },
          "channel": {
            "type": "string",
            "example": "MOBILL / IVR",
            "nullable": false
          }
        },
        "additionalProperties": false
      },
      "AMCSPayTerminalRequest": {
        "type": "object",
        "required": [
          "requestId",
          "callerIdentifier",
          "terminalId",
          "cardEntryMode",
          "requestTimestamp",
          "transactionAmount"
        ],
        "properties": {
          "requestId": {
            "type": "string",
            "format": "uuid",
            "example": "00000000-0000-0000-0000-000000000000",
            "nullable": false
          },
          "callerIdentifier": {
            "type": "string",
            "example": "client-name",
            "nullable": false
          },
          "terminalId": {
            "type": "string",
            "example": "450-829-523",
            "nullable": false
          },
          "requestTimestamp": {
            "type": "string",
            "format": "datetime",
            "pattern": "yyyy-MM-dd'T'HH:mm:ss.SSSz",
            "example": "2030-01-01T10:10:00.000Z",
            "nullable": false
          },
          "transactionAmount": {
            "type": "object",
            "nullable": false,
            "$ref": "#/components/schemas/AMCSPayAmount"
          },
          "cardEntryMode": {
            "type": "string",
            "enum": [
              "Manual",
              "Swipe",
              "Tap"
            ],
            "nullable": false
          }
        },
        "additionalProperties": false
      },
      "AMCSPayInitiatePaymentRequest": {
        "type": "object",
        "required": [
          "requestType",
          "paymentType",
          "transactionOrigin",
          "providerType",
          "transactionAmount",
          "callerIdentifier",
          "requestId"
        ],
        "properties": {
          "requestType": {
            "type": "string",
            "enum": [
              "OneOffPayment",
              "Tokenization"
            ],
            "nullable": false
          },
          "paymentType": {
            "type": "string",
            "enum": [
              "CARD",
              "ACH",
              "GOOGLEPAY",
              "APPLEPAY"
            ],
            "nullable": false
          },
          "transactionOrigin": {
            "type": "string",
            "enum": [
              "MOTO",
              "ECOM"
            ],
            "nullable": false
          },
          "callerIdentifier": {
            "type": "string",
            "nullable": false
          },
          "requestId": {
            "type": "string",
            "format": "uuid",
            "example": "00000000-0000-0000-0000-000000000000",
            "nullable": false
          },
          "providerType": {
            "type": "string",
            "enum": [
              "ACICards",
              "ACIElectronic",
              "Heartland",
              "MerchantPartners",
              "PaymentExpress",
              "Realex"
            ]
          },
          "transactionAmount": {
            "type": "object",
            "nullable": false,
            "$ref": "#/components/schemas/AMCSPayAmount"
          },
          "canStoreProfile": {
            "type": "boolean",
            "example": false
          },
          "completionURL": {
            "type": "string",
            "format": "url",
            "example": ""
          },
          "addresses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AMCSPayAddress"
            }
          },
          "contacts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AMCSPayContact"
            }
          },
          "customerInfo": {
            "$ref": "#/components/schemas/AMCSPayCustomerInfo"
          }
        }
      },
      "AMCSPayMobillsIvrRequestDetail": {
        "required": [
          "CustomerId",
          "ExternalChannel"
        ],
        "type": "object",
        "properties": {
          "CustomerId": {
            "minLength": 7,
            "type": "string"
          },
          "ExternalChannel": {
            "type": "string"
          }
        }
      },
      "AMCSPayMobillsIvrResponse": {
        "type": "object",
        "properties": {
          "customerGuid": {
            "format": "uuid",
            "type": "string",
            "example": "00000000-0000-0000-0000-000000000000",
            "nullable": false
          },
          "customerName": {
            "type": "string",
            "example": "Mark Smith",
            "nullable": false
          },
          "customerBalance": {
            "type": "integer",
            "example": "120.95",
            "nullable": true
          },
          "customerCurrency": {
            "type": "string",
            "example": "EUR"
          },
          "invoiceDetails": {
            "type": "object",
            "$ref": "#/components/schemas/AMCSPayInvoiceDetails"
          },
          "transactionReference": {
            "type": "string",
            "format": "uuid",
            "example": "00000000-0000-0000-0000-000000000000",
            "nullable": true
          },
          "zipCode": {
            "type": "string",
            "example": "00501",
            "nullable": true
          },
          "dueDate": {
            "type": "string",
            "example": "YYYY-MM-DD",
            "nullable": true
          },
          "invoiceDate": {
            "type": "string",
            "example": "YYYY-MM-DD",
            "nullable": true
          },
          "lastPaymentDate": {
            "type": "string",
            "example": "YYYY-MM-DD",
            "nullable": true
          },
          "lastPaymentAmount": {
            "type": "string",
            "example": "155.50",
            "nullable": true
          },
          "makePaymentLink": {
            "format": "url",
            "type": "string",
            "example": "https://localhost/paybylink?key=092159d8-9e57-41a5-af6c-745bd45ff2f7",
            "nullable": true
          },
          "isActive": {
            "type": "boolean",
            "example": "true"
          },
          "mobillsEnrollment": {
            "type": "boolean",
            "example": "true"
          },
          "guid": {
            "format": "uuid",
            "type": "string",
            "example": "00000000-0000-0000-0000-000000000000",
            "nullable": true
          }
        }
      },
      "AMCSPayTerminalResponse": {
        "type": "object",
        "properties": {
          "statusCode": {
            "type": "string",
            "enum": [
              "Success",
              "Failure"
            ],
            "example": "Success",
            "nullable": false
          },
          "amcsPayTransactionId": {
            "type": "string",
            "nullable": false
          },
          "providerTransactionId": {
            "type": "string",
            "nullable": false
          },
          "approvalCode": {
            "type": "string",
            "nullable": false
          },
          "tokenValue": {
            "type": "string",
            "example": "iLGOd76VSiaAQBcZswQf",
            "nullable": true
          },
          "tokenExpiry": {
            "type": "string",
            "format": "datetime",
            "example": "2022-07-27 18:54:18.6767965 +08:00",
            "nullable": false
          },
          "responseTimeStamp": {
            "type": "string",
            "format": "datetime",
            "example": "2022-07-27 18:54:18.6767965 +08:00",
            "nullable": false
          }
        }
      },
      "AMCSPayErrorResponse": {
        "type": "object",
        "properties": {
          "errorMessage": {
            "type": "string",
            "example": "error message",
            "nullable": true
          }
        }
      },
      "AMCSPayInvoiceDetails": {
        "type": "object",
        "properties": {
          "invoiceNumber": {
            "type": "string",
            "example": "INV001"
          },
          "invoiceGUID": {
            "format": "uuid",
            "example": "00000000-0000-0000-0000-000000000000",
            "type": "string"
          },
          "invoiceDate": {
            "type": "string",
            "example": "YYYY-MM-DD"
          },
          "zipCode": {
            "type": "string",
            "example": "00501"
          },
          "invoiceDueDate": {
            "type": "string",
            "example": "YYYY-MM-DD"
          },
          "unallocatedAmount": {
            "type": "integer",
            "example": "120.95"
          },
          "invoiceCurrency": {
            "type": "string",
            "example": "EUR"
          }
        },
        "additionalProperties": false
      },
      "AMCSPayInitiatePaymentResponse": {
        "type": "object",
        "properties": {
          "hppUrl": {
            "format": "url",
            "type": "string",
            "example": "https://localhost/paybylink?key=092159d8-9e57-41a5-af6c-745bd45ff2f7",
            "nullable": false
          },
          "callerTransactionId": {
            "format": "uuid",
            "example": "00000000-0000-0000-0000-000000000000",
            "type": "string",
            "nullable": false
          },
          "statusCode": {
            "type": "string",
            "enum": [
              "Initiated"
            ],
            "example": "Initiated",
            "nullable": false
          }
        }
      },
      "AMCSPayContact": {
        "type": "object",
        "properties": {
          "contactType": {
            "type": "string",
            "enum": [
              "Email",
              "Mobile"
            ],
            "example": "Billing"
          },
          "contactValue": {
            "type": "Mobile",
            "example": "089748588788"
          }
        }
      },
      "AMCSPayCustomerInfo": {
        "type": "object",
        "properties": {
          "customerName": {
            "type": "string",
            "example": ""
          },
          "customerId": {
            "type": "string",
            "example": "ACC1007"
          },
          "customerIP": {
            "type": "string",
            "example": "000.000.0.000"
          },
          "customerStatus": {
            "type": "string",
            "example": ""
          },
          "websiteUrl": {
            "type": "string",
            "example": ""
          }
        },
        "additionalProperties": false
      },
      "AMCSPayAmount": {
        "type": "object",
        "required": [
          "currency"
        ],
        "properties": {
          "principalAmount": {
            "type": "Decimal",
            "example": "40"
          },
          "serviceFeeAmount": {
            "type": "Decimal",
            "example": "10.20"
          },
          "currency": {
            "type": "string",
            "example": "EUR",
            "nullable": false
          }
        }
      },
      "AMCSPayAddress": {
        "type": "object",
        "properties": {
          "addressType": {
            "type": "string",
            "enum": [
              "Billing",
              "Shipping"
            ],
            "example": "Billing",
            "nullable": false
          },
          "streetAddress1": {
            "type": "string",
            "example": "27, Longwood Avenue",
            "nullable": true
          },
          "streetAddress2": {
            "type": "string",
            "example": "South Circular",
            "nullable": true
          },
          "streetAddress3": {
            "type": "string",
            "example": "Road Dublin-08",
            "nullable": true
          },
          "city": {
            "type": "string",
            "example": "Dublin",
            "nullable": true
          },
          "state": {
            "type": "string",
            "example": "Munster",
            "nullable": true
          },
          "postCode": {
            "type": "string",
            "example": "12345",
            "nullable": true
          },
          "country": {
            "type": "string",
            "example": "Ireland",
            "nullable": true
          },
          "iSO3166Numeric": {
            "type": "string",
            "example": "Ireland",
            "nullable": true
          }
        }
      },
      "AMCSPayPollPaymentRequest": {
        "required": [
          "callerTransactionId"
        ],
        "type": "object",
        "properties": {
          "callerTransactionId": {
            "type": "string",
            "format": "uuid",
            "example": "00000000-0000-0000-0000-000000000000"
          }
        },
        "additionalProperties": false
      },
      "AMCSPayPollPaymentResponse": {
        "type": "object",
        "properties": {
          "amcsPayReferenceId": {
            "type": "string",
            "nullable": true,
            "example": ""
          },
          "providerReference": {
            "type": "string",
            "nullable": true,
            "example": ""
          },
          "providerResponseCode": {
            "type": "string",
            "nullable": true,
            "example": "OK"
          },
          "providerAuthCode": {
            "type": "string",
            "nullable": true,
            "example": ""
          },
          "additionalProviderData": {
            "type": "object",
            "additionalProperties": true
          },
          "responseTimeStamp": {
            "type": "string",
            "format": "datetime",
            "example": "2022-07-27 18:54:18.6767965 +08:00"
          },
          "notes": {
            "type": "string",
            "nullable": true,
            "example": ""
          },
          "statusCode": {
            "type": "string",
            "enum": [
              "Initiated",
              "Success",
              "Failure"
            ],
            "example": "Success",
            "nullable": false
          }
        },
        "additionalProperties": false
      },
      "AMCSPayRefundRequest": {
        "required": [
          "requestType",
          "paymentType",
          "transactionOrigin",
          "callerIdentifier",
          "requestId",
          "providerType",
          "transactionAmount",
          "originalPaymentReference"
        ],
        "type": "object",
        "properties": {
          "requestType": {
            "type": "string",
            "enum": [
              "Refund"
            ],
            "example": "Refund"
          },
          "paymentType": {
            "type": "string",
            "enum": [
              "Card",
              "ACH"
            ],
            "example": "CARD"
          },
          "transactionOrigin": {
            "type": "string",
            "enum": [
              "MOTO"
            ],
            "example": "MOTO"
          },
          "callerIdentifier": {
            "type": "string",
            "example": "Elemos"
          },
          "requestId": {
            "type": "string",
            "format": "uuid",
            "example": "00000000-0000-0000-0000-000000000000"
          },
          "providerType": {
            "type": "string",
            "enum": [
              "ACICards",
              "Heartland",
              "MerchantPartners",
              "PaymentExpress",
              "Realex"
            ],
            "example": "ACICards"
          },
          "transactionAmount": {
            "type": "object",
            "example": "24.00",
            "nullable": false,
            "$ref": "#/components/schemas/AMCSPayAmount"
          },
          "originalPaymentReference": {
            "type": "string",
            "example": "8ac7a4a28749242d01874c7e648327b7"
          }
        }
      },
      "AMCSPayVaultRequest": {
        "required": [
          "requestType",
          "paymentType",
          "transactionOrigin",
          "callerIdentifier",
          "requestId",
          "providerType",
          "transactionAmount",
          "tokenReference"
        ],
        "type": "object",
        "properties": {
          "requestType": {
            "type": "string",
            "enum": [
              "VaultOrAutoPayment"
            ],
            "example": "VaultOrAutoPayment"
          },
          "paymentType": {
            "type": "string",
            "enum": [
              "Card",
              "ACH"
            ],
            "example": "CARD"
          },
          "transactionOrigin": {
            "type": "string",
            "enum": [
              "MOTO",
              "ECOM"
            ],
            "example": "MOTO"
          },
          "callerIdentifier": {
            "type": "string",
            "example": "Elemos"
          },
          "requestId": {
            "type": "string",
            "format": "uuid",
            "example": "00000000-0000-0000-0000-000000000000"
          },
          "providerType": {
            "type": "string",
            "enum": [
              "ACICards",
              "Heartland",
              "MerchantPartners",
              "PaymentExpress",
              "Realex"
            ],
            "example": "ACICards"
          },
          "transactionAmount": {
            "type": "object",
            "nullable": false,
            "$ref": "#/components/schemas/AMCSPayAmount"
          },
          "tokenReference": {
            "type": "string",
            "example": "58af616d8b112af873be57bb627a7677bdffdc6a306ffdff26c6f6b59d917fe7",
            "nullable": false
          },
          "schemeReferenceData": {
            "type": "string",
            "example": "123456789012345"
          },
          "maskedCardNumber": {
            "type": "string",
            "example": "XXXXX"
          }
        }
      },
      "AMCSPayRefundResponse": {
        "type": "object",
        "properties": {
          "amcsPayReferenceId": {
            "type": "string",
            "format": "uuid",
            "example": "00000000-0000-0000-0000-000000000000"
          },
          "providerReference": {
            "type": "string",
            "format": "uuid",
            "example": "00000000-0000-0000-0000-000000000000"
          },
          "providerResponseCode": {
            "type": "string",
            "nullable": true,
            "example": "Success"
          },
          "providerAuthCode": {
            "type": "string",
            "nullable": true,
            "example": ""
          },
          "additionalProviderData": {
            "type": "object",
            "additionalProperties": true
          },
          "responseTimeStamp": {
            "type": "string",
            "format": "datetime",
            "example": "2022-07-27 18:54:18.6767965 +08:00"
          },
          "notes": {
            "type": "string",
            "nullable": true,
            "example": ""
          },
          "statusCode": {
            "type": "string",
            "enum": [
              "Success",
              "Failure"
            ],
            "example": "Success",
            "nullable": false
          }
        },
        "additionalProperties": false
      },
      "AMCSPayVaultResponse": {
        "type": "object",
        "properties": {
          "amcsPayReferenceId": {
            "type": "string",
            "format": "uuid",
            "example": "00000000-0000-0000-0000-000000000000"
          },
          "providerReference": {
            "type": "string",
            "format": "uuid",
            "example": "00000000-0000-0000-0000-000000000000"
          },
          "providerResponseCode": {
            "type": "string",
            "nullable": true,
            "example": "Success"
          },
          "providerAuthCode": {
            "type": "string",
            "nullable": true,
            "example": ""
          },
          "additionalProviderData": {
            "type": "object",
            "additionalProperties": true
          },
          "responseTimeStamp": {
            "type": "string",
            "format": "datetime",
            "example": "2022-07-27 18:54:18.6767965 +08:00"
          },
          "notes": {
            "type": "string",
            "nullable": true,
            "example": ""
          },
          "statusCode": {
            "type": "string",
            "enum": [
              "Success",
              "Failure"
            ],
            "example": "Success",
            "nullable": false
          }
        },
        "additionalProperties": false
      }
    }
  }
}
